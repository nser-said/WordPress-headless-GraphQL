   

import Image from "next/image";  
import Link from "next/link";  
export const metadata = {
  title: "The posts coming from WordPress",
  description: "Generated by create next app",
};


export async function getPosts() {  
  const query = `  
  {  
    posts {  
      nodes {  
        date  
        slug  
        id  
        title  
        excerpt  
        content  
        featuredImage {  
          node {  
            mediaDetails {  
              file  
              sizes {  
                width  
                height  
                sourceUrl  
              }  
            }  
          }  
        }  
      }  
    }  
  }`;  

  const res = await fetch(`${process.env.NEXT_PUBLIC_WORDPRESS_API}?query=${encodeURIComponent(query)}`, {  
    method: 'GET',  
    headers: {  
      'Content-Type': 'application/json',  
    },  
    revalidate: 5,  
  });  

  const { data } = await res.json();  
  console.log(data);  
  return data.posts.nodes;  
}  

const Blog = async () => {  
  const posts = await getPosts();  
  return (  
  <>
     <div class=" m-10 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 p-4">
     {posts.map((post) => (  
  <Link href={`/blog/${post.id}`} key={post.id} >   
    <div className="block rounded-lg bg-white shadow-secondary-1 dark:bg-surface-dark">  
      <div className="relative overflow-hidden bg-cover bg-no-repeat" data-twe-ripple-init data-twe-ripple-color="light">  
        <div className="h-52 w-full overflow-hidden relative rounded-md border flex items-center justify-center">  
          <Image  
            src={post.featuredImage?.node?.mediaDetails?.sizes[3]?.sourceUrl} // تأكد من اختيار الحجم المناسب  
            width={290} // تعديل العرض بناءً على حجم الصورة، يمكنك تغييره حسب الحجم الفعلي للصورة  
            height={300} // تعديل الارتفاع بناءً على حجم الصورة  
            className="rounded-t-lg object-cover" // إضافة object-cover لجعل الصورة تغطي المساحة  
            alt={post.title}  
          />  
        </div>  
      
        <a href="#!">  
          <div className="absolute bottom-0 left-0 right-0 top-0 h-full w-full overflow-hidden bg-[hsla(0,0%,98%,0.15)] bg-fixed opacity-0 transition duration-300 ease-in-out hover:opacity-100"></div>  
        </a>  
      </div>  
      <div className="p-6 text-surface dark:text-white">  
        <h5 className="mb-2 text-xl font-medium leading-tight">{post.title}</h5>  
        <p className="mb-4 text-base">  
          <div  
            className="text-sm"  
            dangerouslySetInnerHTML={{  
              __html: post.excerpt.split(" ").slice(0, 12).join(" ").trim() + "...",  
            }}  
          ></div>  
        </p>  
        <button  
          type="button"  
          className="inline-block rounded bg-primary px-6 pb-2 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-primary-3 transition duration-150 ease-in-out hover:bg-primary-accent-300 hover:shadow-primary-2 focus:bg-primary-accent-300 focus:shadow-primary-2 focus:outline-none focus:ring-0 active:bg-primary-600 active:shadow-primary-2 dark:shadow-black/30 dark:hover:shadow-dark-strong dark:focus:shadow-dark-strong dark:active:shadow-dark-strong"  
          data-twe-ripple-init  
          data-twe-ripple-color="light">  
          Button  
        </button>  
      </div>  
    </div>   
  </Link>  
))}
    
</div>

</>



  );  
};  

export default Blog;